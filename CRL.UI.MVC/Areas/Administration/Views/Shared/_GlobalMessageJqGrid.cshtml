@model  CRL.UI.MVC.Areas.Administration.Models.ViewPageModels._GlobalMessageJqGridViewModel
@using CRL.Infrastructure.Authentication
@using CRL.Infrastructure.Enums
@{var SecurityUser = (SecurityUser)HttpContext.Current.User;}
<div id="searchgrid">
    @using MvcJqGrid

    @{
        MvcJqGrid.DataReaders.JsonReader jsonReader = new MvcJqGrid.DataReaders.JsonReader();
        jsonReader.RepeatItems = false;
        jsonReader.Id = "dataJson";
        Grid c = Html.Grid("ListofMessages");
        c = c.SetCaption("List of Messages");

        c = c.AddColumn(new Column("Id").SetCustomFormatter("buttonize").SetSearch(false).SetLabel("Actions").SetSortable(false));
        //c = c.AddColumn(new Column("CreatedOn").SetLabel("Date").SetFormatter(MvcJqGrid.Enums.Formatters.Date));
        c = c.AddColumn(new Column("CreatedOn").SetFormatter(MvcJqGrid.Enums.Formatters.Date, "newformat: 'd-M-Y'").SetSearchType(MvcJqGrid.Enums.Searchtype.Datepicker).SetSearchDateFormat("M/dd/yy").SetLabel("Date"));
        //c = c.AddColumn(new Column("CreatedOn").SetFormatter(MvcJqGrid.Enums.Formatters.Date, "newformat: 'd-M-Y'").SetSearchType(MvcJqGrid.Enums.Searchtype.Datepicker).SetLabel("Date"));
        c = c.AddColumn(new Column("Title").SetLabel("Title"));
        c = c.AddColumn(new Column("Body").SetLabel("Message Body"));
       
        c = c.SetUrl(Url.Action("ViewGlobalMessageJsonData", "Configuration", Model))
          .SetAutoEncode(true)
        .SetDataType(MvcJqGrid.Enums.DataType.Json)
        .SetAutoWidth(true)
        .SetRowNum(15)
        .SetJsonReader(jsonReader)
        .SetLoadUi(MvcJqGrid.Enums.LoadUi.Block)
        .SetRowList(new int[] { 10, 15, 20, 50 })
        .SetViewRecords(true)
        .SetGridView(true)
        .SetPager("pager")
            // .SetMultiSelect(true)
            //.SetMultiBoxOnly(true)
       .SetSearchToolbar(true)
        .SetMultiSelectWidth(20)
            // .OnSelectRow("onRowSelected(rowid, status)")  
       .OnLoadError("GetServerErrors(xhr, status, error)")
        .SetSearchToggleButton(true).SetSearchOnEnter(true);       
   
              
    }
    @(c)

</div>


<script src="@Url.Content("~/Scripts/bootbox.min.js")"></script>
<script type="text/javascript">

    function buttonize(cellvalue, options, rowobject) {
        var Buttons = "";
        var Button1 = '<a class="btn btn-default" style="margin:3px 3px 3px 0;" onclick="edit(' + cellvalue + ',1)"> <i class="icon-th"></i> View</a>';
        Buttons = Buttons + Button1;
        var userType = '@SecurityUser.IsInAnyRoles("Administrator (Owner)")';
        if(userType == 'True') {
            var Button2 = '<a class="btn btn-default" style="margin:3px 3px 3px 0;" onclick="edit(' + cellvalue + ',2)"> <i class="icon-pencil"></i> Edit</a>';
        Buttons = Buttons + Button2;
        var Button3 = '<a class="btn btn-primary"  style="margin:3px 3px 3px 0; " onclick="edit(' + cellvalue + ',3)"> <i class="icon-trash"></i> Delete</a>';
        Buttons = Buttons + Button3;
        
         }

        return Buttons;
    }


    function GetServerErrors(xhr, status, error) {
        bootbox.alert("<h4 style='color:red'><i class=' icon-remove'></i> Error Loading data</h4><hr/>There was an error while the data in the grid. Please contact your administrator for assistance<br/>" + "<b>Response: " + xhr.status + " " + xhr.statusText + "</b> ");
    }

    function edit(id, cmd) {
        if (cmd == 1) {
            var url = '@Html.Raw(Url.Action("GlobalMessageDetails", "Configuration", new { Area = "Administration", Id = "-1", mode = "-2" }))';
            url = url.replace("-1", id);
            url = url.replace("-2", 1);
            window.location.assign(url);
        }

        if (cmd == 2) {
            var url = '@Html.Raw(Url.Action("GlobalMessageDetails", "Configuration", new { Area = "Administration", Id = "-1", mode = "-2" }))';
            url = url.replace("-1", id);
            url = url.replace("-2", 3);
            window.location.assign(url);
        }

        if (cmd == 3) {

            var url = '@Html.Raw(Url.Action("DeleteGlobalMessage", "Configuration", new { Area = "Administration", Id = "-1", mode = "-2" }))';
            url = url.replace("-1", id);
            url = url.replace("-2", 3);
            confirmDelete(url,id);

        }
    }


    function confirmDelete(url, id) {
        var itemName = GetDetails(id);
        var htmlmsg = '<div style="padding:3px;">' +
                      '<h4><i class="icon-trash"></i> Delete Global Message</h4>' +
                      '<hr>' +
                      '<p>This process will delete global message with title: <b> ' + itemName + ' </b></p>' +
                      '</div>';
        bootbox.dialog(htmlmsg, [{
            "label": "Cancel"
        }, {
            "label": 'Confirm Delete',
            "callback": function () {
                window.location.assign(url);
            }
        }], {
            "backdrop": "static",
            "keyboard": false,
            "show": true
        }
    );
    }

    function GetDetails(id) {

        var item = null;
        $.ajax({
            url: "@Url.Action("GetDeleteGlobalMessage", "Configuration",new {Area="Administration"})",
            data: { Id: id },
            dataType: "json",
            success: function (data) {
                item = data.title;
            },
            error: function (xhr, status, error) {
                console.log(xhr.responseText);
            },
            async: false
        });
        return item;
    }

</script>
