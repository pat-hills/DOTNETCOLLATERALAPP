@model CRL.UI.MVC.Models.Report.ReportBaseViewModel
@using CRL.UI.MVC.Models.Report.ViewModel
@using CRL.UI.MVC.Models.Report.ReportsViewModel
@using CRL.UI.MVC.HTMLHelpers
<div class="row-fluid">
    <div class="span6">
        <div class="control-group">
            <div class="control-label">Client Submitted Date</div>
            <div class="controls">
                @Html.RadioButtonFor(model => ((LegalEntitiesViewModel)model).UseStartEndDateOption, "true") Filter client submitted date by start and end date<br />
                @Html.RadioButtonFor(model => ((LegalEntitiesViewModel)model).UseStartEndDateOption, "false") Filter client submitted date by month and year
            </div>
        </div>
        <div id="pnlStartEndDate">
            <div class="control-group">
                <div class="control-label">Start Date</div>
                <div class="controls">
                    @Html.TextBoxFor(model => ((LegalEntitiesViewModel)model).StartDate)
                    @Html.ValidationMessageFor(model => ((LegalEntitiesViewModel)model).StartDate)
                </div>
            </div>

            <div class="control-group">
                <div class="control-label">End Date</div>
                <div class="controls">
                    @Html.TextBoxFor(model => ((LegalEntitiesViewModel)model).EndDate)
                    @Html.ValidationMessageFor(model => ((LegalEntitiesViewModel)model).EndDate)
                </div>
            </div>

        </div>
        <div id="pnlMonthYear">
            <div class="control-group">
                <div class="control-label">Month</div>
                <div class="controls">
                    @Html.DropDownListFor(model => ((LegalEntitiesViewModel)model).SelectedMonthList, ((LegalEntitiesViewModel)Model).MonthsList)
                    @Html.ValidationMessageFor(model => ((LegalEntitiesViewModel)model).SelectedMonthList)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">Year</div>
                <div class="controls">
                    @Html.DropDownListFor(model => ((LegalEntitiesViewModel)model).SelectedYear, ((LegalEntitiesViewModel)Model).YearList)
                    @Html.ValidationMessageFor(model => ((LegalEntitiesViewModel)model).SelectedYear)
                </div>
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelForRequired(model => ((LegalEntitiesViewModel)model).CompanyName)
            </div>
            <div class="controls">
                @Html.EditorFor(model => ((LegalEntitiesViewModel)model).CompanyName)
                @Html.ValidationMessageFor(model => ((LegalEntitiesViewModel)model).CompanyName)
            </div>
        </div>
    </div>

    <div class="span6">

        <div class="control-group">
            <div class="control-label">
                @Html.LabelForRequired(model => ((LegalEntitiesViewModel)model).SecuredPartyType)
            </div>
            <div class="controls">

                @Html.DropDownListFor(model => ((LegalEntitiesViewModel)model).SecuredPartyType, new SelectList(((LegalEntitiesViewModel)Model).SecuredPartyList, "Value", "Text", ((LegalEntitiesViewModel)Model).SecuredPartyType), "", new { multiple = "multiple" })
                @Html.ValidationMessageFor(model => ((LegalEntitiesViewModel)model).SecuredPartyType)
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelForRequired(model => ((LegalEntitiesViewModel)model).StatusType)
            </div>
            <div class="controls">

                @Html.DropDownListFor(model => ((LegalEntitiesViewModel)model).StatusType, new SelectList(((LegalEntitiesViewModel)Model).StatusTypeList, "Value", "Text", ((LegalEntitiesViewModel)Model).StatusType))
                @Html.ValidationMessageFor(model => ((LegalEntitiesViewModel)model).StatusType)
            </div>

        </div>
    </div>
</div>






<script>
    $("#pnlMonthYear").hide();
    $("#clientstatus").hide();
    var dateFormatMode;
    $(document).ready(function () {
        @if (Request.UserAgent.Contains("Edge") || Request.Browser.Browser == "InternetExplorer" || Request.Browser.Browser == "Safari")
        { 
        <text>
        dateFormatMode = 'dd/mm/yy';
        </text>
        }
        else
        {
         <text>
        dateFormatMode = 'dd/M/yy';
        </text>
        }

        $("input[name='StartDate']:text").datepicker({ dateFormat: dateFormatMode });
        $("input[name='EndDate']:text").datepicker({ dateFormat: dateFormatMode });

        $("input[name='UseStartEndDateOption']:radio").change(function () {

            if ($(this).val() == "true") {
                $('#pnlMonthYear').hide();
                $('#pnlStartEndDate').show();
            }
            else {
                $('#pnlMonthYear').show();
                $('#pnlStartEndDate').hide();
            }
        });


        if ($("input[name='UseStartEndDateOption']:checked").val() == "true") {
            $('#pnlMonthYear').hide();
            $('#pnlStartEndDate').show();
        }
        else {
            $('#pnlMonthYear').show();
            $('#pnlStartEndDate').hide();
        }


    });



</script>
