@model CRL.UI.MVC.Models.Report.ReportBaseViewModel
@using CRL.UI.MVC.Models.Report.ViewModel
@using CRL.UI.MVC.Models.Report.ReportsViewModel
@using CRL.UI.MVC.HTMLHelpers
@using CRL.Infrastructure.Authentication
<div class="row-fluid">
    <div class="span6">
        <div class="control-group">
            <div class="control-label">Filter by registration date</div>
            <div class="controls">
                @Html.RadioButtonFor(model => ((DebtorStatViewModel)model).UseStartEndDateOption, "true") Filter registration date by start and end date<br />
                @Html.RadioButtonFor(model => ((DebtorStatViewModel)model).UseStartEndDateOption, "false") Filter registration date by month and year
            </div>
        </div>
        <div id="pnlStartEndDate">
            <div class="control-group">
                <div class="control-label">Start Date</div>
                <div class="controls">
                    @Html.TextBoxFor(model => ((DebtorStatViewModel)model).StartDate)
                    @Html.ValidationMessageFor(model => ((DebtorStatViewModel)model).StartDate)
                </div>
            </div>

            <div class="control-group">
                <div class="control-label">End Date</div>
                <div class="controls">
                    @Html.TextBoxFor(model => ((DebtorStatViewModel)model).EndDate)
                    @Html.ValidationMessageFor(model => ((DebtorStatViewModel)model).EndDate)
                </div>
            </div>

        </div>
        <div id="pnlMonthYear">
            <div class="control-group">
                <div class="control-label">Month</div>
                <div class="controls">
                    @Html.DropDownListFor(model => ((DebtorStatViewModel)model).SelectedMonthList, ((DebtorStatViewModel)Model).MonthsList)
                    @Html.ValidationMessageFor(model => ((DebtorStatViewModel)model).SelectedMonthList)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">Year</div>
                <div class="controls">
                    @Html.DropDownListFor(model => ((DebtorStatViewModel)model).SelectedYear, ((DebtorStatViewModel)Model).YearList)
                    @Html.ValidationMessageFor(model => ((DebtorStatViewModel)model).SelectedYear)
                </div>
            </div>
        </div>
        <div class="control-group">
            <div class="control-label">
                @Html.LabelForRequired(model => ((DebtorStatViewModel)model).GroupedBy)
            </div>
            <div class="controls">
                @Html.DropDownListFor(model => ((DebtorStatViewModel)model).GroupedBy, new SelectList(((DebtorStatViewModel)Model).GroupByList, "Value", "Text", ((DebtorStatViewModel)Model).GroupedBy))
                @Html.ValidationMessageFor(model => ((DebtorStatViewModel)model).GroupedBy)
            </div>
        </div>
        <div class="control-group">
            <div class="controls">
                @Html.EditorFor(model => ((DebtorStatViewModel)model).LimitToWomenOwned) Limit to female debtor(s)
            @Html.ValidationMessageFor(model => ((DebtorStatViewModel)model).LimitToWomenOwned)
            </div>
        </div>
         <div class="control-group">
            <div class="control-label">
                @Html.LabelForRequired(model => ((DebtorStatViewModel)model).FSState )
            </div>
            <div class="controls">
                @Html.DropDownListFor(model => ((DebtorStatViewModel)model).FSState, new SelectList(((DebtorStatViewModel)Model).FSStateList , "Value", "Text", ((DebtorStatViewModel)Model).FSState))
                @Html.ValidationMessageFor(model => ((DebtorStatViewModel)model).FSState)
            </div>
        </div>

              @*<div class="control-group">
            <div class="control-label">
                @Html.LabelForRequired(model => ((DebtorStatViewModel)model).FSPeriod )
            </div>
            <div class="controls">
                @Html.DropDownListFor(model => ((DebtorStatViewModel)model).FSPeriod, new SelectList(((DebtorStatViewModel)Model).FSPeriodList , "Value", "Text", ((DebtorStatViewModel)Model).FSPeriod))
                @Html.ValidationMessageFor(model => ((DebtorStatViewModel)model).FSPeriod)
            </div>
        </div>*@
        @Html.HiddenFor(model => ((DebtorStatViewModel)model).FSPeriod)


    </div>

</div>




<script>

    $("#clientstatus").hide();
    var dateFormatMode;
    $(document).ready(function () {
         @if (Request.UserAgent.Contains("Edge") || Request.Browser.Browser == "InternetExplorer" || Request.Browser.Browser == "Safari")
        { 
        <text>
        dateFormatMode = 'dd/mm/yy';
        </text>
        }
        else
        {
         <text>
        dateFormatMode = 'dd/M/yy';
        </text>
        }
        $("input[name='StartDate']:text").datepicker({ dateFormat: dateFormatMode });
        $("input[name='EndDate']:text").datepicker({ dateFormat: dateFormatMode });

        $("input[name='UseStartEndDateOption']:radio").change(function () {

            if ($(this).val() == "true") {
                $('#pnlMonthYear').hide();
                $('#pnlStartEndDate').show();
            }
            else {
                $('#pnlMonthYear').show();
                $('#pnlStartEndDate').hide();
            }
        });

        if ($("input[name='UseStartEndDateOption']:checked").val() == "true") {
            $('#pnlMonthYear').hide();
            $('#pnlStartEndDate').show();
        }
        else {
            $('#pnlMonthYear').show();
            $('#pnlStartEndDate').hide();
        }
    });



</script>
